{"remainingRequest":"E:\\疫苗取点\\Vaccine_location\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\疫苗取点\\Vaccine_location\\frontend\\src\\views\\layout\\container\\center-map.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\疫苗取点\\Vaccine_location\\frontend\\src\\views\\layout\\container\\center-map.vue","mtime":1630285541474},{"path":"E:\\疫苗取点\\Vaccine_location\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\疫苗取点\\Vaccine_location\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\疫苗取点\\Vaccine_location\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\疫苗取点\\Vaccine_location\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport { loadBMap } from '@/lib/map'\nimport 'echarts/map/js/china.js'\nimport 'echarts/extension/bmap/bmap.js'\n\nexport default {\n    name: \"center-map\",\n    data() {\n        return {\n\n        };\n    },\n    mounted() {\n        this.$nextTick(() => {\n            loadBMap(\"qUqHTO6WiuGIKRaS7UDqFtl6HxbpDqdi\").then(() => {\n                this.getMapData()\n            })\n        })\n    },\n    methods: {\n        getData(point) {\n            let A = point[0],\n                B = point[1],\n                n = 30,\n                arc = Math.PI / 4,\n                points = [];\n            let R = this.getCircleRadio(A, B, arc);\n            let Ori = this.getCircleOrigin(A, B, R)\n            for (let i=0; i<n; i++) {\n                let angl = arc*i / n,\n                    arc0 = Math.asin((A[0]-Ori[0])/R);\n                let x = Ori[0] + Math.sin(arc0 + angl)*R;\n                let y = Ori[1] + Math.cos(arc0 + angl)*R;\n                points.push([x, y]);\n            }\n            return points;\n        },\n        getCircleRadio(A, B, arc) {\n            return Math.sqrt(Math.pow(B[0]-A[0], 2)+Math.pow(B[1]-A[1], 2)) / (2*Math.sin(arc/2));\n        },\n        getCircleOrigin(A, B, r) {\n            let x0 = 0, y0 = 0;\n            if (A[0] == B[0]) {\n                x0 = A[0] - Math.sqrt( r*r - Math.pow((B[1]-A[1]/2), 2));\n                y0 = (A[1] + B[1])/2;\n            } else if (A[1] == B[1]) {\n                x0 = (A[0] + B[0])/2;\n                y0 = A[1] + Math.sqrt( r*r - Math.pow((B[0]-A[0]/2), 2));\n            } else {\n                let M = [(A[0] + B[0])/2, (A[1] + B[1])/2],\n                    k = (A[0]-B[0])/(B[1]-A[1]),\n                    a = 1.0 + k * k,\n                    b = -2 * M[0] - k * k * (A[0] + B[0]),\n                    c = M[0] * M[0] + k * k * (A[0] + B[0]) * (A[0] + B[0]) / 4.0 - (r * r - ((M[0] - A[0]) * (M[0] - A[0]) + (M[1] - A[1]) * (M[1] - A[1])));\n                x0 = (-1.0 * b - Math.sqrt(b * b -4 * a * c)) / (2 * a);\n                y0 = k * x0 - k * M[0] + M[1];\n            }\n            return [x0, y0];\n        },\n        getMapData() {\n            // let hStep = 300 / (data.length - 1);\n            let busLines = [{\n                coords: this.getData([[102.732271,25.04593], [102.84326,24.891176]]),\n                lineStyle: {\n                    normal: {\n                        color: this.$echarts.color.modifyHSL('#5A94DF', Math.round(350))\n                    }\n                }\n            },\n                {\n                    coords: this.getData([[102.843947,24.987063], [102.84326,24.891176]]),\n                    lineStyle: {\n                        normal: {\n                            color: this.$echarts.color.modifyHSL('#5A94DF', Math.round(160))\n                        }\n                    }\n                },\n                {\n                    coords: this.getData([[102.708447,25.048228], [102.84326,24.891176]]),\n                    lineStyle: {\n                        normal: {\n                            color: this.$echarts.color.modifyHSL('#5A94DF', Math.round(140))\n                        }\n                    }\n                },\n                {\n                    coords: this.getData([[102.707492,25.006726], [102.84326,24.891176]]),\n                    lineStyle: {\n                        normal: {\n                            color: this.$echarts.color.modifyHSL('#5A94DF', Math.round(250))\n                        }\n                    }\n                }];\n            let myChart = this.$echarts.init(document.getElementById('container')); //这里是为了获得容器所在位置\n            myChart.setOption({\n                bmap: {\n                    center: [102.802073,24.99007],\n                    zoom: 12,\n                    roam: true,\n                    mapStyle: {\n                        // style: 'midnight'\n                        'styleJson': [\n                            {\n                                'featureType': 'water',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'color': '#031628'\n                                }\n                            },\n                            {\n                                'featureType': 'land',\n                                'elementType': 'geometry',\n                                'stylers': {\n                                    'color': '#000102'\n                                }\n                            },\n                            {\n                                'featureType': 'highway',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'visibility': 'off'\n                                }\n                            },\n                            {\n                                'featureType': 'arterial',\n                                'elementType': 'geometry.fill',\n                                'stylers': {\n                                    'color': '#000000'\n                                }\n                            },\n                            {\n                                'featureType': 'arterial',\n                                'elementType': 'geometry.stroke',\n                                'stylers': {\n                                    'color': '#0b3d51'\n                                }\n                            },\n                            {\n                                'featureType': 'local',\n                                'elementType': 'geometry',\n                                'stylers': {\n                                    'color': '#000000'\n                                }\n                            },\n                            {\n                                'featureType': 'railway',\n                                'elementType': 'geometry.fill',\n                                'stylers': {\n                                    'color': '#000000'\n                                }\n                            },\n                            {\n                                'featureType': 'railway',\n                                'elementType': 'geometry.stroke',\n                                'stylers': {\n                                    'color': '#08304b'\n                                }\n                            },\n                            {\n                                'featureType': 'subway',\n                                'elementType': 'geometry',\n                                'stylers': {\n                                    'lightness': -70\n                                }\n                            },\n                            {\n                                'featureType': 'building',\n                                'elementType': 'geometry.fill',\n                                'stylers': {\n                                    'color': '#000000'\n                                }\n                            },\n                            {\n                                'featureType': 'all',\n                                'elementType': 'labels.text.fill',\n                                'stylers': {\n                                    'color': '#857f7f'\n                                }\n                            },\n                            {\n                                'featureType': 'all',\n                                'elementType': 'labels.text.stroke',\n                                'stylers': {\n                                    'color': '#000000'\n                                }\n                            },\n                            {\n                                'featureType': 'building',\n                                'elementType': 'geometry',\n                                'stylers': {\n                                    'color': '#022338'\n                                }\n                            },\n                            {\n                                'featureType': 'green',\n                                'elementType': 'geometry',\n                                'stylers': {\n                                    'color': '#062032'\n                                }\n                            },\n                            {\n                                'featureType': 'boundary',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'color': '#465b6c'\n                                }\n                            },\n                            {\n                                'featureType': 'manmade',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'color': '#022338'\n                                }\n                            },\n                            {\n                                'featureType': 'label',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'visibility': 'off'\n                                }\n                            }\n                        ]\n                    }\n                },\n                /*geo: { // 这个是重点配置区\n                    map: 'china', // 表示中国地图\n                    roam: true,\n                    label: {\n                        normal: {\n                            show: true, // 是否显示对应地名\n                            textStyle: {\n                                color: 'rgba(0,0,0,0.4)'\n                            }\n                        }\n                    },\n                    itemStyle: {\n                        normal: {\n                            borderColor: 'rgba(0, 0, 0, 0.2)'\n                        },\n                        emphasis: {\n                            areaColor: null,\n                            shadowOffsetX: 0,\n                            shadowOffsetY: 0,\n                            shadowBlur: 20,\n                            borderWidth: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                },*/\n                series: [{\n                    type: 'lines',\n                    coordinateSystem: 'bmap',\n                    polyline: true,\n                    data: busLines,\n                    silent: true,\n                    lineStyle: {\n                        normal: {\n                            // color: '#c23531',\n                            // color: 'rgb(200, 35, 45)',\n                            opacity: 0.3,\n\n                            width: 2\n                        }\n                    },\n                    progressiveThreshold: 500,\n                    progressive: 200\n                }, {\n                    type: 'lines',\n                    coordinateSystem: 'bmap',\n                    polyline: true,\n                    data: busLines,\n                    lineStyle: {\n                        normal: {\n                            width: 0\n                        }\n                    },\n                    effect: {\n                        constantSpeed: 50,\n                        show: true,\n                        trailLength: 0.5,\n                        symbolSize: 2\n                    },\n                    zlevel: 1\n                }]\n            });\n        },\n    }\n}\n",{"version":3,"sources":["center-map.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"center-map.vue","sourceRoot":"src/views/layout/container","sourcesContent":["<template>\r\n    <div style=\"width: 100%;height: 100%\">\r\n        <div id=\"container\" style=\"width:100%; height:100%\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { loadBMap } from '@/lib/map'\r\n    import 'echarts/map/js/china.js'\r\n    import 'echarts/extension/bmap/bmap.js'\r\n\r\n    export default {\r\n        name: \"center-map\",\r\n        data() {\r\n            return {\r\n\r\n            };\r\n        },\r\n        mounted() {\r\n            this.$nextTick(() => {\r\n                loadBMap(\"qUqHTO6WiuGIKRaS7UDqFtl6HxbpDqdi\").then(() => {\r\n                    this.getMapData()\r\n                })\r\n            })\r\n        },\r\n        methods: {\r\n            getData(point) {\r\n                let A = point[0],\r\n                    B = point[1],\r\n                    n = 30,\r\n                    arc = Math.PI / 4,\r\n                    points = [];\r\n                let R = this.getCircleRadio(A, B, arc);\r\n                let Ori = this.getCircleOrigin(A, B, R)\r\n                for (let i=0; i<n; i++) {\r\n                    let angl = arc*i / n,\r\n                        arc0 = Math.asin((A[0]-Ori[0])/R);\r\n                    let x = Ori[0] + Math.sin(arc0 + angl)*R;\r\n                    let y = Ori[1] + Math.cos(arc0 + angl)*R;\r\n                    points.push([x, y]);\r\n                }\r\n                return points;\r\n            },\r\n            getCircleRadio(A, B, arc) {\r\n                return Math.sqrt(Math.pow(B[0]-A[0], 2)+Math.pow(B[1]-A[1], 2)) / (2*Math.sin(arc/2));\r\n            },\r\n            getCircleOrigin(A, B, r) {\r\n                let x0 = 0, y0 = 0;\r\n                if (A[0] == B[0]) {\r\n                    x0 = A[0] - Math.sqrt( r*r - Math.pow((B[1]-A[1]/2), 2));\r\n                    y0 = (A[1] + B[1])/2;\r\n                } else if (A[1] == B[1]) {\r\n                    x0 = (A[0] + B[0])/2;\r\n                    y0 = A[1] + Math.sqrt( r*r - Math.pow((B[0]-A[0]/2), 2));\r\n                } else {\r\n                    let M = [(A[0] + B[0])/2, (A[1] + B[1])/2],\r\n                        k = (A[0]-B[0])/(B[1]-A[1]),\r\n                        a = 1.0 + k * k,\r\n                        b = -2 * M[0] - k * k * (A[0] + B[0]),\r\n                        c = M[0] * M[0] + k * k * (A[0] + B[0]) * (A[0] + B[0]) / 4.0 - (r * r - ((M[0] - A[0]) * (M[0] - A[0]) + (M[1] - A[1]) * (M[1] - A[1])));\r\n                    x0 = (-1.0 * b - Math.sqrt(b * b -4 * a * c)) / (2 * a);\r\n                    y0 = k * x0 - k * M[0] + M[1];\r\n                }\r\n                return [x0, y0];\r\n            },\r\n            getMapData() {\r\n                // let hStep = 300 / (data.length - 1);\r\n                let busLines = [{\r\n                    coords: this.getData([[102.732271,25.04593], [102.84326,24.891176]]),\r\n                    lineStyle: {\r\n                        normal: {\r\n                            color: this.$echarts.color.modifyHSL('#5A94DF', Math.round(350))\r\n                        }\r\n                    }\r\n                },\r\n                    {\r\n                        coords: this.getData([[102.843947,24.987063], [102.84326,24.891176]]),\r\n                        lineStyle: {\r\n                            normal: {\r\n                                color: this.$echarts.color.modifyHSL('#5A94DF', Math.round(160))\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        coords: this.getData([[102.708447,25.048228], [102.84326,24.891176]]),\r\n                        lineStyle: {\r\n                            normal: {\r\n                                color: this.$echarts.color.modifyHSL('#5A94DF', Math.round(140))\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        coords: this.getData([[102.707492,25.006726], [102.84326,24.891176]]),\r\n                        lineStyle: {\r\n                            normal: {\r\n                                color: this.$echarts.color.modifyHSL('#5A94DF', Math.round(250))\r\n                            }\r\n                        }\r\n                    }];\r\n                let myChart = this.$echarts.init(document.getElementById('container')); //这里是为了获得容器所在位置\r\n                myChart.setOption({\r\n                    bmap: {\r\n                        center: [102.802073,24.99007],\r\n                        zoom: 12,\r\n                        roam: true,\r\n                        mapStyle: {\r\n                            // style: 'midnight'\r\n                            'styleJson': [\r\n                                {\r\n                                    'featureType': 'water',\r\n                                    'elementType': 'all',\r\n                                    'stylers': {\r\n                                        'color': '#031628'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'land',\r\n                                    'elementType': 'geometry',\r\n                                    'stylers': {\r\n                                        'color': '#000102'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'highway',\r\n                                    'elementType': 'all',\r\n                                    'stylers': {\r\n                                        'visibility': 'off'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'arterial',\r\n                                    'elementType': 'geometry.fill',\r\n                                    'stylers': {\r\n                                        'color': '#000000'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'arterial',\r\n                                    'elementType': 'geometry.stroke',\r\n                                    'stylers': {\r\n                                        'color': '#0b3d51'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'local',\r\n                                    'elementType': 'geometry',\r\n                                    'stylers': {\r\n                                        'color': '#000000'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'railway',\r\n                                    'elementType': 'geometry.fill',\r\n                                    'stylers': {\r\n                                        'color': '#000000'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'railway',\r\n                                    'elementType': 'geometry.stroke',\r\n                                    'stylers': {\r\n                                        'color': '#08304b'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'subway',\r\n                                    'elementType': 'geometry',\r\n                                    'stylers': {\r\n                                        'lightness': -70\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'building',\r\n                                    'elementType': 'geometry.fill',\r\n                                    'stylers': {\r\n                                        'color': '#000000'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'all',\r\n                                    'elementType': 'labels.text.fill',\r\n                                    'stylers': {\r\n                                        'color': '#857f7f'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'all',\r\n                                    'elementType': 'labels.text.stroke',\r\n                                    'stylers': {\r\n                                        'color': '#000000'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'building',\r\n                                    'elementType': 'geometry',\r\n                                    'stylers': {\r\n                                        'color': '#022338'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'green',\r\n                                    'elementType': 'geometry',\r\n                                    'stylers': {\r\n                                        'color': '#062032'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'boundary',\r\n                                    'elementType': 'all',\r\n                                    'stylers': {\r\n                                        'color': '#465b6c'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'manmade',\r\n                                    'elementType': 'all',\r\n                                    'stylers': {\r\n                                        'color': '#022338'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    'featureType': 'label',\r\n                                    'elementType': 'all',\r\n                                    'stylers': {\r\n                                        'visibility': 'off'\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    /*geo: { // 这个是重点配置区\r\n                        map: 'china', // 表示中国地图\r\n                        roam: true,\r\n                        label: {\r\n                            normal: {\r\n                                show: true, // 是否显示对应地名\r\n                                textStyle: {\r\n                                    color: 'rgba(0,0,0,0.4)'\r\n                                }\r\n                            }\r\n                        },\r\n                        itemStyle: {\r\n                            normal: {\r\n                                borderColor: 'rgba(0, 0, 0, 0.2)'\r\n                            },\r\n                            emphasis: {\r\n                                areaColor: null,\r\n                                shadowOffsetX: 0,\r\n                                shadowOffsetY: 0,\r\n                                shadowBlur: 20,\r\n                                borderWidth: 0,\r\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                            }\r\n                        }\r\n                    },*/\r\n                    series: [{\r\n                        type: 'lines',\r\n                        coordinateSystem: 'bmap',\r\n                        polyline: true,\r\n                        data: busLines,\r\n                        silent: true,\r\n                        lineStyle: {\r\n                            normal: {\r\n                                // color: '#c23531',\r\n                                // color: 'rgb(200, 35, 45)',\r\n                                opacity: 0.3,\r\n\r\n                                width: 2\r\n                            }\r\n                        },\r\n                        progressiveThreshold: 500,\r\n                        progressive: 200\r\n                    }, {\r\n                        type: 'lines',\r\n                        coordinateSystem: 'bmap',\r\n                        polyline: true,\r\n                        data: busLines,\r\n                        lineStyle: {\r\n                            normal: {\r\n                                width: 0\r\n                            }\r\n                        },\r\n                        effect: {\r\n                            constantSpeed: 50,\r\n                            show: true,\r\n                            trailLength: 0.5,\r\n                            symbolSize: 2\r\n                        },\r\n                        zlevel: 1\r\n                    }]\r\n                });\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}