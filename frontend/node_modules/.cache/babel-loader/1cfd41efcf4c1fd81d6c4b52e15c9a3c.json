{"remainingRequest":"E:\\疫苗取点\\Vaccine_location\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\疫苗取点\\Vaccine_location\\frontend\\src\\lib\\axios.js","dependencies":[{"path":"E:\\疫苗取点\\Vaccine_location\\frontend\\src\\lib\\axios.js","mtime":1628819057389},{"path":"E:\\疫苗取点\\Vaccine_location\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\疫苗取点\\Vaccine_location\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"E:\\\\\\u75AB\\u82D7\\u53D6\\u70B9\\\\Vaccine_location\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\\\u75AB\\u82D7\\u53D6\\u70B9\\\\Vaccine_location\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { Loading, Message, MessageBox } from 'element-ui';\nimport { stripObject } from \"./utils\";\n\nvar HttpRequest =\n/*#__PURE__*/\nfunction () {\n  function HttpRequest(options) {\n    _classCallCheck(this, HttpRequest);\n\n    this.baseUrl = '/api';\n    this.queue = {};\n  }\n\n  _createClass(HttpRequest, [{\n    key: \"getInsideConfig\",\n    value: function getInsideConfig() {\n      var config = {\n        baseURL: this.baseUrl,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        },\n        timeout: 3000\n      };\n      return config;\n    }\n  }, {\n    key: \"interceptors\",\n    value: function interceptors(instance) {\n      instance.interceptors.request.use(function (config) {\n        // console.log(config)\n        // 添加全局去除空格\n        // if(!config.noTrim){\n        //     //全局去除空格 可以用noTrim 来控制不进行全局去除空格\n        //     stripObject(config.params || config.data)\n        // }\n        // 添加全局loading...\n        if (config.loading === undefined || config.loading) {\n          //全局遮罩层处理\n          if (!instance.loading) {\n            instance.loading = {\n              total: 1,\n              obj: Loading.service({\n                fullscreen: true,\n                lock: true,\n                background: 'rgba(0, 0, 0, 0.05)'\n              })\n            };\n          } else {\n            instance.loading.total++;\n          }\n\n          config.loading = true;\n        }\n\n        return config;\n      }, function (error) {\n        Message({\n          message: error.message,\n          type: 'error',\n          duration: 5 * 1000\n        });\n        return Promise.reject(error);\n      });\n      instance.interceptors.response.use(function (res) {\n        if (res.config.loading) {\n          if (instance.loading.total > 1) {\n            //遮罩层处理\n            instance.loading.total--;\n          } else {\n            instance.loading.obj.close();\n            instance.loading = undefined;\n          }\n        } // console.log(res)\n\n\n        return res;\n      }, function (error) {\n        if (!error.config || error.config.loading) {\n          if (instance.loading) {\n            if (instance.loading.total > 1) {\n              //遮罩层处理\n              instance.loading.total--;\n            } else {\n              instance.loading.obj.close();\n              instance.loading = undefined;\n            }\n          }\n        } // console.log('error',error)\n\n\n        Message({\n          message: error.message,\n          type: 'error',\n          duration: 5 * 1000\n        });\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function request(options) {\n      var instance = axios.create();\n      options = Object.assign(this.getInsideConfig(), options);\n      this.interceptors(instance);\n      return instance(options);\n    }\n  }]);\n\n  return HttpRequest;\n}();\n\nexport default HttpRequest;",{"version":3,"sources":["E:\\疫苗取点\\Vaccine_location\\frontend\\src\\lib\\axios.js"],"names":["axios","Loading","Message","MessageBox","stripObject","HttpRequest","options","baseUrl","queue","config","baseURL","headers","timeout","instance","interceptors","request","use","loading","undefined","total","obj","service","fullscreen","lock","background","error","message","type","duration","Promise","reject","response","res","close","create","Object","assign","getInsideConfig"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {Loading, Message, MessageBox} from 'element-ui'\r\nimport {stripObject} from './utils'\r\n\r\nclass HttpRequest {\r\n    constructor(options) {\r\n        this.baseUrl = '/api'\r\n        this.queue = {}\r\n    }\r\n    getInsideConfig() {\r\n        const config = {\r\n            baseURL: this.baseUrl,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n            },\r\n            timeout: 3000\r\n        }\r\n        return config\r\n    }\r\n    interceptors(instance) {\r\n        instance.interceptors.request.use(config => {\r\n            // console.log(config)\r\n            // 添加全局去除空格\r\n            // if(!config.noTrim){\r\n            //     //全局去除空格 可以用noTrim 来控制不进行全局去除空格\r\n            //     stripObject(config.params || config.data)\r\n            // }\r\n\r\n            // 添加全局loading...\r\n            if(config.loading === undefined || config.loading){//全局遮罩层处理\r\n                if(!instance.loading){\r\n                    instance.loading = {total:1,obj:\r\n                            Loading.service({\r\n                                fullscreen: true,lock: true,\r\n                                background: 'rgba(0, 0, 0, 0.05)'\r\n                            })}\r\n                }else{\r\n                    instance.loading.total++\r\n                }\r\n                config.loading = true\r\n            }\r\n\r\n            return config\r\n\r\n        },error => {\r\n            Message({\r\n                message: error.message,\r\n                type: 'error',\r\n                duration: 5 * 1000\r\n            })\r\n            return Promise.reject(error)\r\n        })\r\n        instance.interceptors.response.use(res => {\r\n\r\n            if(res.config.loading){\r\n                if(instance.loading.total>1){//遮罩层处理\r\n                    instance.loading.total--\r\n                }else{\r\n                    instance.loading.obj.close()\r\n                    instance.loading = undefined\r\n                }\r\n            }\r\n            // console.log(res)\r\n            return res\r\n        },error => {\r\n            if(!error.config || error.config.loading){\r\n                if(instance.loading){\r\n                    if(instance.loading.total>1){//遮罩层处理\r\n                        instance.loading.total--\r\n                    }else{\r\n                        instance.loading.obj.close()\r\n                        instance.loading = undefined\r\n                    }\r\n                }\r\n\r\n            }\r\n            // console.log('error',error)\r\n            Message({\r\n                message: error.message,\r\n                type: 'error',\r\n                duration: 5 * 1000\r\n            })\r\n            return Promise.reject(error)\r\n        })\r\n    }\r\n    request(options) {\r\n        const instance = axios.create()\r\n        options = Object.assign(this.getInsideConfig(),options)\r\n        this.interceptors(instance)\r\n        return instance(options)\r\n    }\r\n}\r\n\r\nexport default HttpRequest\r\n"]}]}